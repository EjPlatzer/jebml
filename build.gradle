apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'checkstyle'
apply plugin: 'osgi'
apply plugin: 'maven-publish'


project.version = '2.4.1'
repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.5'
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:1.9.+'
    testRuntime 'ch.qos.logback:logback-classic:1.1.2'
}

checkstyleMain {
    configFile = file("tools/csMain.xml")
}
checkstyleTest {
    configFile = file("tools/csMain.xml")
}

// Workaround so that packageinfo files get included for OSGi package versions
sourceSets {
    main {
        resources.srcDirs = java.srcDirs
        output.resourcesDir = output.classesDirs.first()
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  from sourceSets.main.allSource
}
javadoc {
  failOnError = false
}
task javadocJar(type: Jar, dependsOn: javadoc) {
  from javadoc.destinationDir
}

publishing {
  publications {
    "${project.name}Jar"(MavenPublication) {
      from components.java
      artifactId project.name
      artifact sourcesJar {
        classifier "sources"
      }
      artifact javadocJar {
        classifier "javadoc"
      }
    }
  }
  if (project.hasProperty("maven_url")) {
    repositories {
      maven {
        url maven_url
        credentials(PasswordCredentials) {
          username = maven_user
          password = maven_password
        }
      }
    }
  }
}


jar {
    manifest {
      instructions << [
        'Bundle-Name'   : 'JEBML',
        'Bundle-Version': version,
        'Bundle-License': 'LGPLv2',
        'Export-Package': 'org.ebml.*;-split-package:=merge-first',
        'Import-Package': '*;resolution:=optional',
        '-nodefaultversion': true,
        '-noee': true,
        'majorMinor' : 1
      ]
    }
}
